@model ICE_Server.Models.Views.Authentication.EditViewModel

@{
    ViewBag.Title = "Edit";
}


<div class="row">
    <hr class="hr-primary" />
    <ol class="breadcrumb bread-primary ">
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("User overview", "Index", "Users")</li>
        <li>Edit user</li>
    </ol>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">Edit user</h3>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (((ICE_Server.Models.Views.Authentication.UserViewModel)Session["User"]) != null &&
                              ((ICE_Server.Models.Views.Authentication.UserViewModel)Session["User"]).Role.Name == "Admin" &&
                              ((ICE_Server.Models.Views.Authentication.UserViewModel)Session["User"]).Id != Model.Id &&
                              Model.Role.Name != "Admin")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @{
                                        List<SelectListItem> listItems = new List<SelectListItem>();
                                        foreach (var role in ViewBag.RoleId)
                                        {
                                            if (Model.Role.Name.ToLower() == role.Text.ToLower())
                                            {
                                                listItems.Add(new SelectListItem
                                                {
                                                    Text = role.Text,
                                                    Value = role.Value,
                                                    Selected = true
                                                });
                                            }
                                            else
                                            {
                                                listItems.Add(new SelectListItem
                                                {
                                                    Text = role.Text,
                                                    Value = role.Value,
                                                });
                                            }
                                        }
                                        //listItems.Add(new SelectListItem
                                        //{
                                        //    Text = "Admin",
                                        //    Value = "1",
                                        //    Selected = true
                                        //});
                                        //listItems.Add(new SelectListItem
                                        //{
                                        //    Text = "User",
                                        //    Value = "1",
                                        //});

                                    }

                                    @Html.DropDownListFor(model => model.RoleId, listItems, "-- Select user role --",new { @class = "form -control" })
                                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        @if (((ICE_Server.Models.Views.Authentication.UserViewModel)Session["User"]) != null &&
                      ((ICE_Server.Models.Views.Authentication.UserViewModel)Session["User"]).Id == Model.Id)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer rightText">
                    <input type="button" value="Cancel" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Users")'" />
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}