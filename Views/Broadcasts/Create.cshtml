@model ICE_Webserver.ViewModels.BroadcastViewModel

@{
    ViewBag.Title = "Create";
}
<div class="row">
    <hr class="hr-primary" />
    <ol class="breadcrumb bread-primary ">
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("Broadcast overview", "Index", "Broadcasts")</li>
        <li>Create Broadcast</li>
    </ol>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">Create a broadcast</h3>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { maxlength="80", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        <div class="form-group">
                            @Html.Label("Buildings", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="checkboxview">
                                    <div class="checkboxitem">
                                        <input type="checkbox" id="checkall" /><label>Check all buildings</label>
                                    </div>
                                    @if (Model.Buildings != null)
                                    {
                                        foreach (var item in Model.Buildings)
                                        {
                                            <div class="checkboxitem">
                                                <input type="checkbox" name="SelectedBuildings" value="@item.ID" />
                                                <label for="SelectedBuildings">@item.Name 
                                                    @if (item.Location != "") {
                                                        @Html.Raw("- ") @item.Location;
                                                    }
                                                </label>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Emergency", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <select class="form-control" name="EmergencyId" id="EmergencyId">
                                    @if (Model.Emergencies != null)
                                    {
                                        foreach (var item in Model.Emergencies)
                                        {
                                            <option value="@item.ID">@item.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer rightText">
                    <input type="button" value="Cancel" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Broadcasts")'" />
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function toggleChecked(status) {
            $(".checkboxitem input").each(function () {
                // Set the checked status of each to match the
                // checked status of the check all checkbox:
                $(this).prop("checked", status);
            });
        }

        $(document).ready(function () {

            // Grab a reference to the check all box:
            var checkAllBox = $("#checkall");

            //Set the default value of the global checkbox to true:
            checkAllBox.prop('checked', false);

            // Attach the call to toggleChecked to the
            // click event of the global checkbox:
            checkAllBox.click(function () {
                var status = checkAllBox.prop('checked');
                toggleChecked(status);
            });
        });
    </script>
}